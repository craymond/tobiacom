package gui;

import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import main.InfoCentre;
import misc.Options;

public class F_OptionsEnreg extends javax.swing.JFrame {

    static final long serialVersionUID = -2382611823855478686L;
    
    public F_OptionsEnreg() {
	initComponents();
	setLocationRelativeTo(getParent());
	setVisible(true);
	
	tfBanque.setText(InfoCentre.getRepBanque());
	tfBAN.setText(InfoCentre.getRepBAN());
	tfETI.setText(InfoCentre.getRepETI());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING:
     * Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitre = new javax.swing.JLabel();
        labelTitreBanque = new javax.swing.JLabel();
        tfBanque = new javax.swing.JTextField();
        btBanque = new javax.swing.JButton();
        labelTitreBAN = new javax.swing.JLabel();
        tfBAN = new javax.swing.JTextField();
        btBAN = new javax.swing.JButton();
        labelTitreETI = new javax.swing.JLabel();
        tfETI = new javax.swing.JTextField();
        btETI = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        btAnnuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelTitre.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelTitre.setText("Options");

        labelTitreBanque.setText("Répertoire où sont situés les Fichiers Banque:");

        btBanque.setText("Parcourir");
        btBanque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBanqueActionPerformed(evt);
            }
        });

        labelTitreBAN.setText("Répertoire de Sauvegarde des Fichiers .BAN:");

        btBAN.setText("Parcourir");
        btBAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBANActionPerformed(evt);
            }
        });

        labelTitreETI.setText("Répertoire de Sauvegarde des Fichiers .ETI:");

        btETI.setText("Parcourir");
        btETI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btETIActionPerformed(evt);
            }
        });

        btSave.setText("Sauvegarder");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btAnnuler.setText("Annuler");
        btAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnnulerActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(btAnnuler)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(btSave))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, tfBAN, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, labelTitreETI)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, labelTitreBAN)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, labelTitreBanque)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, tfBanque)
                                    .add(tfETI))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(btETI)
                                    .add(btBanque)
                                    .add(btBAN))))
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(labelTitre)
                        .add(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(labelTitre)
                        .add(18, 18, 18)
                        .add(labelTitreBanque)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(tfBanque, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(btBanque))
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(labelTitreBAN)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(tfBAN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(btBAN))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(labelTitreETI)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(tfETI, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(btETI))
                .add(148, 148, 148)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btSave)
                    .add(btAnnuler))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnnulerActionPerformed
	dispose();
    }//GEN-LAST:event_btAnnulerActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
	
	String pathBanque = tfBanque.getText();
	String pathBAN    = tfBAN.getText();
	String pathETI    = tfETI.getText();
	
	boolean ok = true;

	// On vérifie les dossiers, si vide, on met par défaut dans InfoCentre
	if(!pathBanque.isEmpty() && !(new File(pathBanque).isDirectory())) {
	    JOptionPane.showMessageDialog(this, new JLabel("Le répertoire '" + pathBanque + "' est incorrect"));
	    ok = false;
	}
	
	if(!pathBanque.isEmpty() && !(new File(pathBAN).isDirectory())) {
	    JOptionPane.showMessageDialog(this, new JLabel("Le répertoire '" + pathBAN + "' est incorrect"));
	    ok = false;
	}
	
	if(!pathBanque.isEmpty() && !(new File(pathETI).isDirectory())) {
	    JOptionPane.showMessageDialog(this, new JLabel("Le répertoire '" + pathETI + "' est incorrect"));
	    ok = false;
	}

	// on sérialise les infos pour les retrouver après
	if(ok) {
	    InfoCentre.setRepBanque(pathBanque);
	    InfoCentre.setRepBAN(pathBAN);
	    InfoCentre.setRepETI(pathETI);
	    
	    Options options = new Options();
	    options.setPathBanque(pathBanque);
	    options.setPathBAN(pathBAN);
	    options.setPathETI(pathETI);

	    try {
		FileOutputStream fos = new FileOutputStream("options_tobiacom.txt");
		ObjectOutputStream oos = new ObjectOutputStream(fos);
		oos.writeObject(options);		
		oos.close();
	    }
	    catch(FileNotFoundException e) {
		JOptionPane.showMessageDialog(this, new JLabel("Impossible de sauvegarder (FileNotFoundException)"));
	    }
	    catch(IOException e) {
		JOptionPane.showMessageDialog(this, new JLabel("Impossible de sauvegarder (IOException)"));
	    }
	}

	
	dispose();
    }//GEN-LAST:event_btSaveActionPerformed

    private void btBanqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBanqueActionPerformed
	JFileChooser fileChooser = new JFileChooser();
	fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	if(fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
	    tfBanque.setText(fileChooser.getSelectedFile().toString());
	}
    }//GEN-LAST:event_btBanqueActionPerformed

    private void btBANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBANActionPerformed
	JFileChooser fileChooser = new JFileChooser();
	fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	if(fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
	    tfBAN.setText(fileChooser.getSelectedFile().toString());
	}
    }//GEN-LAST:event_btBANActionPerformed

    private void btETIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btETIActionPerformed
	JFileChooser fileChooser = new JFileChooser();
	fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	if(fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
	    tfETI.setText(fileChooser.getSelectedFile().toString());
	}
    }//GEN-LAST:event_btETIActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnnuler;
    private javax.swing.JButton btBAN;
    private javax.swing.JButton btBanque;
    private javax.swing.JButton btETI;
    private javax.swing.JButton btSave;
    private javax.swing.JLabel labelTitre;
    private javax.swing.JLabel labelTitreBAN;
    private javax.swing.JLabel labelTitreBanque;
    private javax.swing.JLabel labelTitreETI;
    private javax.swing.JTextField tfBAN;
    private javax.swing.JTextField tfBanque;
    private javax.swing.JTextField tfETI;
    // End of variables declaration//GEN-END:variables
}
